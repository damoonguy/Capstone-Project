{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\OneDrive - stevens.edu\\\\Documents\\\\GitHub\\\\blog-app\\\\Frontend\\\\src\\\\pages\\\\Home\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogGrid from \"../../components/BlogGrid\";\nimport CategoriesList from \"../../components/CategoriesList\";\nimport Footer from \"../../components/Footer\";\nimport SubHeading from \"../../components/SubHeading\";\n\n// import blogService from \"../../services/blogService\";\nimport categoryService from \"../../services/categoriesService\";\nimport { fetchBlogs, reset, reset as resetBlogs } from \"../../features/blogsSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  // const [blogs, setBlogs] = useState();\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState();\n  const {\n    blogs,\n    isError: isBlogsError,\n    isSuccess: blogsSuccess,\n    isLoading: isLoadingBlogs,\n    message: blogsMessage\n  } = useSelector(state => state.blogs);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        // const blogsRes = await blogService.fetchBlogs();\n        dispatch(fetchBlogs());\n        const categoryRes = await categoryService.fetchCategories();\n        setBlogs(blogsRes.data);\n        console.log(blogsRes.message);\n        console.log(blogsRes.data);\n        setCategories(categoryRes.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchBlogs();\n    return () => {\n      dispatch(resetBlogs());\n    };\n  }, [dispatch]);\n  console.log(blogs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeading, {\n        subHeading: \"Recent blog posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogGrid, {\n        blogPosts: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoriesList, {\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"Ev+PzP6gQKmqHHcMaoXk4ZBuSVs=\", true, function () {\n  return [useDispatch];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","Navbar","Heading","BlogGrid","CategoriesList","Footer","SubHeading","categoryService","fetchBlogs","reset","resetBlogs","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","dispatch","categories","setCategories","blogs","isError","isBlogsError","isSuccess","blogsSuccess","isLoading","isLoadingBlogs","message","blogsMessage","useSelector","state","categoryRes","fetchCategories","setBlogs","blogsRes","data","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","subHeading","blogPosts","_c","$RefreshReg$"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/blog-app/Frontend/src/pages/Home/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Heading from \"../../components/Heading\";\r\nimport BlogGrid from \"../../components/BlogGrid\";\r\nimport CategoriesList from \"../../components/CategoriesList\";\r\nimport Footer from \"../../components/Footer\";\r\nimport SubHeading from \"../../components/SubHeading\";\r\n\r\n// import blogService from \"../../services/blogService\";\r\nimport categoryService from \"../../services/categoriesService\";\r\n\r\nimport { fetchBlogs, reset, reset as resetBlogs } from \"../../features/blogsSlice\";\r\n\r\n\r\nexport default function HomePage() {\r\n  // const [blogs, setBlogs] = useState();\r\n  const dispatch = useDispatch();\r\n  const [categories, setCategories] = useState();\r\n\r\n  const {\r\n    blogs,\r\n    isError: isBlogsError,\r\n    isSuccess: blogsSuccess,\r\n    isLoading: isLoadingBlogs,\r\n    message: blogsMessage,\r\n  } = useSelector((state) => state.blogs);\r\n\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      try {\r\n        // const blogsRes = await blogService.fetchBlogs();\r\n        dispatch(fetchBlogs());\r\n        const categoryRes = await categoryService.fetchCategories();\r\n        setBlogs(blogsRes.data);\r\n        console.log(blogsRes.message);\r\n        console.log(blogsRes.data);\r\n        setCategories(categoryRes.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchBlogs();\r\n    return () => {\r\n      dispatch(resetBlogs());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  console.log(blogs);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Heading />\r\n      <div className=\"container\">\r\n        <SubHeading subHeading={\"Recent blog posts\"} />\r\n        <BlogGrid blogPosts={blogs} />\r\n        <CategoriesList categories={categories} />\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}