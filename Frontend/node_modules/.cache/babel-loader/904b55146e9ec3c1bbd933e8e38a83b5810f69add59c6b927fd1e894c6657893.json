{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\OneDrive - stevens.edu\\\\Documents\\\\GitHub\\\\blog-app\\\\Frontend\\\\src\\\\pages\\\\Profile\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar\";\nimport Loading from \"../../components/Loading\";\nimport Footer from \"../../components/Footer\";\nimport SuccessToast from \"../../components/SuccessToast\";\nimport ErrorToast from \"../../components/ErrorToast\";\nimport BlogList from \"../../components/BlogList\";\nimport AddEditBlogModal from \"../../components/AddEditBlogModal\";\nimport DeleteBlogModal from \"../../components/DeleteBlogModal\";\nimport blogService from \"../../services/blogService\";\nimport authService from \"../../services/authService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage() {\n  _s();\n  let {\n    authorId\n  } = useParams();\n  const [author, setAuthor] = useState();\n  const [blogs, setBlogs] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getAuthorBlogs = async () => {\n      try {\n        setIsLoading(true);\n        const author = await authService.getUser(authorId);\n        const blogsRes = await blogService.fetchBlogsByAuthorId(authorId);\n        setBlogs(blogsRes.data);\n        setAuthor(author);\n        setIsSuccess(true);\n        setMessage(blogsRes.message);\n        setIsLoading(false);\n      } catch (error) {\n        setIsError(true);\n        setIsLoading(false);\n        setMessage(error.message || error);\n      }\n    };\n    getAuthorBlogs();\n  }, [authorId]);\n  console.log(author);\n  const resetSuccess = () => {\n    setIsSuccess(false);\n    setMessage(\"\");\n  };\n  const resetError = () => {\n    setIsError(false);\n    setMessage(\"\");\n  };\n  const AuthorDetails = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8 col-lg-6 col-xl-4 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-sticky my-5\",\n        style: {\n          top: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 mb-3 bg-light rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"fst-italic\",\n            children: [author.firstName, \" \", author.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: author.image,\n            className: \"avatar\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [author.bio.substring(0, 100), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  };\n  if (isLoading || !author || !blogs) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(AuthorDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: \"Author Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        blogs: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditBlogModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DeleteBlogModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SuccessToast, {\n      show: isSuccess,\n      message: message,\n      onClose: resetSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ErrorToast, {\n      show: isError,\n      message: message,\n      onClose: resetError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ProfilePage, \"9q4y/C1zAuuFGoHx0g5yykDmN9w=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","Loading","Footer","SuccessToast","ErrorToast","BlogList","AddEditBlogModal","DeleteBlogModal","blogService","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","authorId","author","setAuthor","blogs","setBlogs","isError","setIsError","isSuccess","setIsSuccess","message","setMessage","isLoading","setIsLoading","getAuthorBlogs","getUser","blogsRes","fetchBlogsByAuthorId","data","error","console","log","resetSuccess","resetError","AuthorDetails","className","children","style","top","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","bio","substring","show","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/blog-app/Frontend/src/pages/Profile/index.js"],"sourcesContent":["import React, {useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Footer from \"../../components/Footer\";\r\nimport SuccessToast from \"../../components/SuccessToast\";\r\nimport ErrorToast from \"../../components/ErrorToast\";\r\nimport BlogList from \"../../components/BlogList\";\r\nimport AddEditBlogModal from \"../../components/AddEditBlogModal\";\r\nimport DeleteBlogModal from \"../../components/DeleteBlogModal\";\r\n\r\nimport blogService from \"../../services/blogService\";\r\nimport authService from \"../../services/authService\";\r\n\r\nexport default function ProfilePage() {\r\n    let { authorId } = useParams();\r\n    const [author, setAuthor] = useState();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [isError, setIsError] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const getAuthorBlogs = async () => {\r\n        try {\r\n          setIsLoading(true);\r\n          const author = await authService.getUser(authorId);\r\n          const blogsRes = await blogService.fetchBlogsByAuthorId(authorId);\r\n          setBlogs(blogsRes.data);\r\n          setAuthor(author);\r\n          setIsSuccess(true);\r\n          setMessage(blogsRes.message);\r\n          setIsLoading(false);\r\n        } catch (error) {\r\n          setIsError(true);\r\n          setIsLoading(false);\r\n          setMessage(error.message || error);\r\n        }\r\n      };\r\n      getAuthorBlogs();\r\n    }, [authorId]);\r\n\r\n    console.log(author);\r\n  \r\n    const resetSuccess = () => {\r\n      setIsSuccess(false);\r\n      setMessage(\"\");\r\n    }\r\n  \r\n    const resetError = () => {\r\n      setIsError(false);\r\n      setMessage(\"\");\r\n    }\r\n\r\n    const AuthorDetails = () => {\r\n      return (\r\n        <div className=\"col-md-8 col-lg-6 col-xl-4 mx-auto\">\r\n          <div className=\"position-sticky my-5\" style={{ top: \"2rem\" }}>\r\n            <div className=\"p-4 mb-3 bg-light rounded\">\r\n              <h4 className=\"fst-italic\">\r\n                {author.firstName} {author.lastName}\r\n              </h4>\r\n              <img src={author.image} className=\"avatar\" alt=\"...\" />\r\n              <p>{author.bio.substring(0, 100)}...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    if (isLoading || !author || !blogs) {\r\n      return <Loading />;\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <AuthorDetails /> \r\n          <p className=\"page-subtitle\">Author Blog Posts</p>\r\n          <BlogList blogs={blogs} />\r\n          <Footer />\r\n        </div>\r\n        <AddEditBlogModal />\r\n        <DeleteBlogModal />\r\n        <SuccessToast\r\n          show={isSuccess}\r\n          message={message}\r\n          onClose={resetSuccess}\r\n        />\r\n        <ErrorToast\r\n          show={isError}\r\n          message={message}\r\n          onClose={resetError}\r\n        />\r\n      </>\r\n    );\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}