{"ast":null,"code":"const url = \"http://localhost:5000/api/categories/\";\nconst createCategory = async category => {\n  // will I need the use the category.id?\n\n  try {\n    const data = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: category\n    });\n    const categoriesApiData = await data.json();\n    console.log(categoriesApiData.message);\n    return categoriesApiData;\n  } catch (err) {\n    console.log(\"err\");\n    throw new Error(err);\n  }\n};\nconst fetchCategories = async () => {\n  try {\n    const data = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const categoriesApiData = await data.json();\n    console.log(categoriesApiData.message);\n    return categoriesApiData;\n  } catch (err) {\n    console.log(\"err\");\n    throw new Error(err);\n  }\n};\nconst updateCategory = async category => {\n  try {\n    const data = await fetch(url + category.id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: category\n    });\n    const categoriesApiData = await data.json();\n    console.log(categoriesApiData.message);\n    return categoriesApiData;\n  } catch (err) {\n    console.log(\"err\");\n    throw new Error(err);\n  }\n};\nconst deleteCategoryById = async categoryId => {\n  try {\n    const data = await fetch(url + categoryId, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const categoriesApiData = await data.json();\n    console.log(categoriesApiData.message);\n    return categoriesApiData;\n  } catch (err) {\n    console.log(\"err\");\n    throw new Error(err);\n  }\n};\nconst categoriesService = {\n  createCategory,\n  fetchCategories,\n  updateCategory,\n  deleteCategoryById\n};\nexport default categoriesService;","map":{"version":3,"names":["url","createCategory","category","data","fetch","method","headers","body","categoriesApiData","json","console","log","message","err","Error","fetchCategories","updateCategory","id","deleteCategoryById","categoryId","categoriesService"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/blog-app/Frontend/src/services/categoriesService.js"],"sourcesContent":["const url = \"http://localhost:5000/api/categories/\";\r\n\r\nconst createCategory = async (category) => { // will I need the use the category.id?\r\n    \r\n    try {\r\n        const data = await fetch(url,\r\n            { \r\n                method: \"POST\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: category\r\n            }\r\n        );\r\n        const categoriesApiData = await data.json();\r\n        console.log(categoriesApiData.message);\r\n        return categoriesApiData;\r\n    } catch (err) {\r\n        console.log(\"err\");\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\nconst fetchCategories = async () => {    \r\n    try {\r\n        const data = await fetch(url,\r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        const categoriesApiData = await data.json();\r\n        console.log(categoriesApiData.message);\r\n        return categoriesApiData;\r\n    } catch (err) {\r\n        console.log(\"err\");\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\nconst updateCategory = async (category) => {\r\n    \r\n    try {\r\n        const data = await fetch(url + category.id,\r\n            { \r\n                method: \"PUT\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: category\r\n            }\r\n        );\r\n        const categoriesApiData = await data.json();\r\n        console.log(categoriesApiData.message);\r\n        return categoriesApiData;\r\n    } catch (err) {\r\n        console.log(\"err\");\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\nconst deleteCategoryById = async (categoryId) => {\r\n    \r\n    try {\r\n        const data = await fetch(url + categoryId,\r\n            { \r\n                method: \"DELETE\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        const categoriesApiData = await data.json();\r\n        console.log(categoriesApiData.message);\r\n        return categoriesApiData;\r\n    } catch (err) {\r\n        console.log(\"err\");\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\n\r\nconst categoriesService = {\r\n    createCategory,\r\n    fetchCategories,\r\n    updateCategory,\r\n    deleteCategoryById\r\n\r\n};\r\n\r\nexport default categoriesService;"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uCAAuC;AAEnD,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAAE;;EAEzC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACJ,GAAG,EACxB;MACIK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEL;IACV,CACJ,CAAC;IACD,MAAMM,iBAAiB,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAACI,OAAO,CAAC;IACtC,OAAOJ,iBAAiB;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAM,IAAIG,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAED,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACA,MAAMZ,IAAI,GAAG,MAAMC,KAAK,CAACJ,GAAG,EACxB;MACIK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,MAAME,iBAAiB,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAACI,OAAO,CAAC;IACtC,OAAOJ,iBAAiB;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAM,IAAIG,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAED,MAAMG,cAAc,GAAG,MAAOd,QAAQ,IAAK;EAEvC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACJ,GAAG,GAAGE,QAAQ,CAACe,EAAE,EACtC;MACIZ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEL;IACV,CACJ,CAAC;IACD,MAAMM,iBAAiB,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAACI,OAAO,CAAC;IACtC,OAAOJ,iBAAiB;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAM,IAAIG,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAED,MAAMK,kBAAkB,GAAG,MAAOC,UAAU,IAAK;EAE7C,IAAI;IACA,MAAMhB,IAAI,GAAG,MAAMC,KAAK,CAACJ,GAAG,GAAGmB,UAAU,EACrC;MACId,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,MAAME,iBAAiB,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAACI,OAAO,CAAC;IACtC,OAAOJ,iBAAiB;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAM,IAAIG,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAGD,MAAMO,iBAAiB,GAAG;EACtBnB,cAAc;EACdc,eAAe;EACfC,cAAc;EACdE;AAEJ,CAAC;AAED,eAAeE,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}