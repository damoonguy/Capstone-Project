{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport categoriesService from \"../services/categoriesService\";\nimport { resetSuccessAndError } from \"./blogsSlice\";\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCategory: null,\n  categories: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const fetchCategories = createAsyncThunk(\"categories/fetchCategories\", async (_, thunkAPI) => {\n  try {\n    return await categoriesService.fetchCategories();\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    resetSuccessAndError: state => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchCategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories = payload.data;\n      state.isSuccess = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(fetchCategories.rejected, (state, {\n      payload\n    }) => {\n      state.message = payload;\n      state.isError = true;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  reset\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoriesService","resetSuccessAndError","initialState","addCategory","editCategory","deleteCategory","categories","isError","isSuccess","isLoading","message","fetchCategories","_","thunkAPI","error","rejectWithValue","categoriesSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","payload","data","rejected","actions","reducer"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/blog-app/Frontend/src/features/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport categoriesService from \"../services/categoriesService\";\r\nimport { resetSuccessAndError } from \"./blogsSlice\";\r\n\r\nconst initialState = {\r\n  addCategory: null,\r\n  editCategory: null,\r\n  deleteCategory: null,\r\n  categories: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  \"categories/fetchCategories\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return await categoriesService.fetchCategories();\r\n    } catch (error) {\r\n      const message = error.message || error;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const categoriesSlice = createSlice({\r\n  name: \"categories\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n    resetSuccessAndError: (state) => {\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = \"\";\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCategories.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, { payload }) => {\r\n        state.categories = payload.data;\r\n        state.isSuccess = true;\r\n        state.isLoading = false;\r\n        state.message = payload.message;\r\n      })\r\n      .addCase(fetchCategories.rejected, (state, { payload }) => {\r\n        state.message = payload;\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = categoriesSlice.actions;\r\nexport default categoriesSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,SAASC,oBAAoB,QAAQ,cAAc;AAEnD,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,IAAI;EAClBC,cAAc,EAAE,IAAI;EACpBC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGZ,gBAAgB,CAC7C,4BAA4B,EAC5B,OAAOa,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,OAAO,MAAMb,iBAAiB,CAACW,eAAe,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMJ,OAAO,GAAGI,KAAK,CAACJ,OAAO,IAAII,KAAK;IACtC,OAAOD,QAAQ,CAACE,eAAe,CAACL,OAAO,CAAC;EAC1C;AACF,CACF,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGlB,WAAW,CAAC;EACzCmB,IAAI,EAAE,YAAY;EAClBf,YAAY;EACZgB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAKlB,YAAY;IAC9BD,oBAAoB,EAAGmB,KAAK,IAAK;MAC/BA,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBY,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACV,OAAO,GAAG,EAAE;IACpB;EACF,CAAC;EACDW,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,eAAe,CAACa,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDc,OAAO,CAACZ,eAAe,CAACc,SAAS,EAAE,CAACL,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MAC1DN,KAAK,CAACd,UAAU,GAAGoB,OAAO,CAACC,IAAI;MAC/BP,KAAK,CAACZ,SAAS,GAAG,IAAI;MACtBY,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACV,OAAO,GAAGgB,OAAO,CAAChB,OAAO;IACjC,CAAC,CAAC,CACDa,OAAO,CAACZ,eAAe,CAACiB,QAAQ,EAAE,CAACR,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACzDN,KAAK,CAACV,OAAO,GAAGgB,OAAO;MACvBN,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACX,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAM,CAAC,GAAGH,eAAe,CAACa,OAAO;AAChD,eAAeb,eAAe,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}