{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\n\n// Get user from local storage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user || null,\n  editUser: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Register user\nexport const register = createAsyncThunk(\"auth/register\", async (userData, thunkAPI) => {\n  try {\n    return await authService.register(userData);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const login = createAsyncThunk(\"auth/login\", async (userData, thunkAPI) => {\n  try {\n    return await authService.login(userData);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update user\nexport const updateUser = createAsyncThunk(\"auth/user\", async (userData, thunkAPI) => {\n  console.log(\"Slice\", userData);\n  try {\n    return await authService.updateUser(userData);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    resetSuccessAndError: state => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n    setEditUser: (state, {\n      payload\n    }) => {\n      state.editUser = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload.data;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.message = payload.message;\n    }).addCase(register.rejected, (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.message = payload;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload.data;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.message = payload.message;\n    }).addCase(login.rejected, (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.message = payload;\n    }).addCase(updateUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateUser.fulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload.data;\n      state.editUser = null;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.message = payload.message;\n    }).addCase(updateUser.rejected, (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.message = payload;\n    });\n  }\n});\nexport const {\n  reset,\n  resetSuccessAndError,\n  setEditUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","editUser","isError","isSuccess","isLoading","message","register","userData","thunkAPI","error","rejectWithValue","login","updateUser","console","log","authSlice","name","reducers","reset","state","resetSuccessAndError","setEditUser","payload","extraReducers","builder","addCase","pending","fulfilled","data","rejected","actions","reducer"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/blog-app/Frontend/src/features/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport authService from \"../services/authService\";\r\n\r\n// Get user from local storage\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = {\r\n  user: user || null,\r\n  editUser: null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n// Register user\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.register(userData);\r\n    } catch (error) {\r\n      const message = error.message || error;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.login(userData);\r\n    } catch (error) {\r\n      const message = error.message || error;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Update user\r\nexport const updateUser = createAsyncThunk(\r\n  \"auth/user\",\r\n  async (userData, thunkAPI) => {\r\n    console.log(\"Slice\",userData);\r\n    try {\r\n      return await authService.updateUser(userData);\r\n    } catch (error) {\r\n      const message = error.message || error;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n    resetSuccessAndError: (state) => {\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = \"\";\r\n    },\r\n    setEditUser: (state, { payload }) => {\r\n      state.editUser = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, { payload }) => {\r\n        state.user = payload.data;\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.isError = false;\r\n        state.message = payload.message;\r\n      })\r\n      .addCase(register.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.isError = true;\r\n        state.message = payload;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, { payload }) => {\r\n        state.user = payload.data;\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.isError = false;\r\n        state.message = payload.message;\r\n      })\r\n      .addCase(login.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.isError = true;\r\n        state.message = payload;\r\n      })\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateUser.fulfilled, (state, { payload }) => {\r\n        state.user = payload.data;\r\n        state.editUser = null;\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.isError = false;\r\n        state.message = payload.message;\r\n      })\r\n      .addCase(updateUser.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.isError = true;\r\n        state.message = payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, resetSuccessAndError, setEditUser } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}